var searchData=
[
  ['edge_5f',['edge_',['../classlidar__imu__calib_1_1BoxFilter.html#a6d311ddd2e231ffeae7096dabb38467b',1,'lidar_imu_calib::BoxFilter']]],
  ['eigenrottoeigenvector3dangleaxis',['eigenRotToEigenVector3dAngleAxis',['../classlidar__imu__calib_1_1BackEndOptimizationFlow.html#a4eee9d2b9445667943d9efdf628f5701',1,'lidar_imu_calib::BackEndOptimizationFlow']]],
  ['eigenutils_2eh',['EigenUtils.h',['../EigenUtils_8h.html',1,'']]],
  ['eigenvector',['eigenVector',['../classlidar__imu__calib_1_1BackEndOptimizationFlow.html#aecbb7e71ceb9fb79ae8a8a6bfdfcac79',1,'lidar_imu_calib::BackEndOptimizationFlow']]],
  ['end_5ftime_5f',['end_time_',['../classlidar__imu__calib_1_1InitOrientation.html#a20bdb9d68216edf3bc353c18ddcf5c79',1,'lidar_imu_calib::InitOrientation::end_time_()'],['../classlidar__imu__calib_1_1InitOrientationFlow.html#a8f8f87eb39dba26e9b88babe62b39306',1,'lidar_imu_calib::InitOrientationFlow::end_time_()']]],
  ['estimate',['Estimate',['../classlidar__imu__calib_1_1BackEndOptimizationFlow.html#a8da6f10152b88f66c76f719a9a299f8f',1,'lidar_imu_calib::BackEndOptimizationFlow']]],
  ['estimate3drigidsimilaritytransform',['estimate3DRigidSimilarityTransform',['../namespacecicv.html#ab0a894f594d97de25b1e54656aefe636',1,'cicv']]],
  ['estimate3drigidtransform',['estimate3DRigidTransform',['../namespacecicv.html#abf497b6a9b4a0cdc95548a1717684c88',1,'cicv']]],
  ['estimatehandeyescrew',['estimateHandEyeScrew',['../classcicv_1_1HandEyeCalibration.html#ad44876098a28c0ddc2700650f392f7b4',1,'cicv::HandEyeCalibration::estimateHandEyeScrew(const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;rvecs1, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;tvecs1, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;rvecs2, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;tvecs2, Eigen::Matrix4d &amp;H_12, bool planarMotion=false)'],['../classcicv_1_1HandEyeCalibration.html#a9d203a7a427fcab76f2879a8353a8bb1',1,'cicv::HandEyeCalibration::estimateHandEyeScrew(const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;rvecs1, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;tvecs1, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;rvecs2, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;tvecs2, Eigen::Matrix4d &amp;H_12, ceres::Solver::Summary &amp;summary, bool planarMotion=false)']]],
  ['estimatehandeyescrewinitial',['estimateHandEyeScrewInitial',['../classcicv_1_1HandEyeCalibration.html#afb62c73c32ccee9cc9300d1d1df46477',1,'cicv::HandEyeCalibration']]],
  ['estimatehandeyescrewrefine',['estimateHandEyeScrewRefine',['../classcicv_1_1HandEyeCalibration.html#ae70bb727c9a9c2e654336ed12d3cfac4',1,'cicv::HandEyeCalibration::estimateHandEyeScrewRefine(DualQuaterniond &amp;dq, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;rvecs1, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;tvecs1, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;rvecs2, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;tvecs2)'],['../classcicv_1_1HandEyeCalibration.html#a2e1701853652c72fb4066248ee2394e9',1,'cicv::HandEyeCalibration::estimateHandEyeScrewRefine(DualQuaterniond &amp;dq, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;rvecs1, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;tvecs1, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;rvecs2, const std::vector&lt; Eigen::Vector3d, Eigen::aligned_allocator&lt; Eigen::Vector3d &gt;&gt; &amp;tvecs2, ceres::Solver::Summary &amp;summary)']]],
  ['exp',['exp',['../classcicv_1_1DualQuaternion.html#a1befbf23db12d0afd65f1afb8c76298c',1,'cicv::DualQuaternion']]],
  ['expdq',['expdq',['../namespacecicv.html#abba01cabb88f8d2dcdc2aa6f835ebfc1',1,'cicv']]],
  ['expq',['expq',['../namespacecicv.html#aed95362232a01f8530f8e7f54925fa73',1,'cicv']]]
];
